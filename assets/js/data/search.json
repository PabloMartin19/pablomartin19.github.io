[
  
  {
    "title": "Prueba",
    "url": "/posts/prueba/",
    "categories": "Prueba, KK",
    "tags": "KK",
    "date": "2024-09-07 12:15:00 +0200",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "Comandos para programación de tareas",
    "url": "/posts/comandos-programacion/",
    "categories": "Sistemas, Automatización",
    "tags": "Automatización",
    "date": "2024-09-02 20:00:00 +0200",
    





    
    "snippet": "IntroducciónEn el entorno Linux, la programación de tareas es una habilidad fundamental que permite a los usuarios automatizar la ejecución de comandos y scripts en momentos específicos o en interv...",
    "content": "IntroducciónEn el entorno Linux, la programación de tareas es una habilidad fundamental que permite a los usuarios automatizar la ejecución de comandos y scripts en momentos específicos o en intervalos regulares. Esta capacidad no solo mejora la eficiencia, sino que también asegura que las tareas críticas se realicen sin intervención manual, lo que es especialmente útil para mantenimiento del sistema, copias de seguridad y actualizaciones programadas.Este post explorará los comandos más utilizados para programar tareas en Linux, tales como cron, at y systemd timers. Aprenderemos cómo configurarlos y utilizarlos de manera efectiva, proporcionando ejemplos prácticos que facilitarán la comprensión de su funcionamiento. Al final, tendrás las herramientas necesarias para automatizar tareas y optimizar tu flujo de trabajo en el sistema operativo Linux.1. SleepEl comando sleep en Linux se utiliza para pausar la ejecución de un proceso o script durante un período de tiempo especificado por el usuario. Este comando está disponible en todas las distribuciones de Linux, incluyendo Debian, y no requiere instalación adicional.Opciones y ParámetrosLas opciones más comunes para el comando sleep son:  -h o –help: Muestra información de ayuda sobre el comando sleep.  -v o –version: Muestra información sobre la versión del comando y detalles relacionados con su desarrollo.Los parámetros que se pueden utilizar con sleep para especificar el tiempo de pausa son:  s: Segundos (por defecto).  m: Minutos.  h: Horas.  d: Días.Es posible utilizar números enteros o decimales para especificar el tiempo de pausa.Ejemplos de UsoAquí hay algunos ejemplos de cómo se puede utilizar el comando sleep:  Pausar un proceso durante 10 segundos:  Pausar un proceso durante 2 minutos:  Pausar un proceso durante 1 hora y media:  Pausar un proceso durante 3 días:                             Pausar un proceso durante una combinación de tiempos (1 día, 2 horas, 3 minutos y 4 segundos):  Pausar un proceso durante 0.5 segundos (usando un número decimal):  Ejecutar varios comandos sleep de forma consecutiva o utilizar el operador &amp;&amp; para ejecutar otro comando después de sleep:  Este script se ejecutará en un bucle infinito, pero se pausará durante 10 minutos en cada iteración utilizando sleep.    echo \"Este script se ejecutará cada 10 minutos.\"while true; do# Comandos que deseas ejecutarsleep 10mdone      El comando sleep es especialmente útil en scripts de shell para introducir retrasosentre la ejecución de diferentes comandos, para reintentar operaciones fallidas después de un tiempo, o para esperar a que se cumplan ciertas condiciones, como la disponibilidad de una conexión de red.En resumen, sleep es una herramienta simple pero poderosa para controlar el flujode ejecución en scripts y procesos en sistemas operativos basados en Linux.2. WatchEl comando watch en Linux es una herramienta que permite a los usuariosmonitorizar continuamente los cambios en un archivo o el resultado de un comando en tiempo real. Este comando ejecuta otros comandos de forma repetitiva y muestra los resultados en tiempo real. Por defecto, watch ejecuta el comando especificado cada 2 segundos y muestra los resultados en la terminal.Opciones y ParámetrosLas opciones más comunes para el comando watch son:  -n segundos: Esta opción permite especificar el intervalo de tiempo en segundos entre cada ejecución del comando.  -d: Esta opción es usada para destacar las diferencias entre las actualizaciones  -t: Esta opción elimina el encabezado que muestra el intervalo, el comando y la hora actual  -g o –chgexit: Esta opción permite que watch termine la ejecución en el caso de que se haya modificado la salidaEjemplos de UsoAquí hay algunos ejemplos de cómo se puede utilizar el comando watch:  Monitorizar el uso de la memoria del servidor cada segundo:  Ejecutar el comando ls cada 5 segundos:  Resaltar las diferencias entre las actualizaciones al ejecutar el comando date:  Eliminar el encabezado al ejecutar el comando free:  Terminar la ejecución si el uso de memoria ha cambiado:  Observar el estado de la memoria con free, refrescando cada décima de segundo:  Observar las conexiones de red con netstat cada segundo:El comando watch es una herramienta muy útil para realizar monitorización en tiempo real en Linux, especialmente para observar la disponibilidad de recursos de red, CPU, memoria, entre otros.3. AtEl comando at en Linux es una herramienta que permite programar tareas únicas para que se ejecuten en un momento específico. Este comando es útil para programar tareas como apagar el sistema a una hora específica, realizar una copia de seguridad única, enviar un correo electrónico como recordatorio a la hora especificada, entre otras cosas.Opciones y ParámetrosLas opciones más comunes para el comando at son:  atq: Lista los trabajos programados.  atrm: Elimina trabajos programados. Se utiliza seguido del número detrabajo, por ejemplo, atrm.  at [hora] [fecha]: Programa una tarea para que se ejecute en la hora y fechaespecificadas.Ejemplos de UsoAquí hay algunos ejemplos de cómo se puede utilizar el comando at:  Programar una tarea para que se ejecute a las 10:00 PM:  Programar una tarea para que se ejecute a las 04:00 AM, copiando unarchivo, eliminándolo del directorio original y apagando el PC:    at 04:00cp /home/usuario/Escritorio/imagen.iso /home/usuario/isosrm /home/usuario/Escritorio/imagen.isoshutdown -h now        Luego presionar Ctrl + D para terminar de ingresar las instrucciones.    Listar los trabajos programados:                               Eliminar un trabajo programado, por ejemplo, el trabajo número 3:  Programar una tarea para que se ejecute a las 11:40 del 26 de febrero de 2023, listando los archivos en la ruta /tmp:    at 11:40 2023-02-26ls -ltr /tmp &gt; \"~/prueba_comando_at.txt\"echo 'finalizado ' &gt;&gt; \"~/prueba_comando_at.txt\"        Luego presionar ctrl + D para terminar de ingresar las instrucciones.  Ten en cuenta que para que el comando at funcione correctamente, lo tendremos que instalar con un sudo apt install at y debe estar corriendo el servicio atd (at daemon). Para habilitarlo en sistemas que usan systemd, puedes ejecutar: sudo systemctl enable –now atd.4. CrontabEl comando crontab en Linux es una herramienta que permite programar tareas para que se ejecuten automáticamente a intervalos regulares. Este comando es útil para automatizar tareas como realizar copias de seguridad, enviar correos electrónicos, limpiar directorios, entre otras cosas.Opciones y ParámetrosLas opciones más comunes para el comando crontab son:  crontab -e: Permite editar el archivo crontab del usuario actual.  crontab -l: Muestra la lista de trabajos programados para el usuario actual.  crontab -r: Elimina todos los trabajos programados para el usuario actual.  crontab -u [usuario] -e: Permite editar el archivo crontab de otro usuario (requiere privilegios de superusuario).Ejemplos de UsoAquí hay algunos ejemplos de cómo se puede utilizar el comando crontab:  Programar una tarea para que se ejecute todos los días a las 5:00 PM:    crontab -e0 17 * * * /ruta/del/script.sh        Luego presionar ctrl + X y luego Y para guardar y salir (si estás utilizando el editor nano).    Listar los trabajos programados:                               Eliminar todos los trabajos programados:  Programar una tarea para que se ejecute cada minuto:    crontab -e* * * * * /ruta/del/comando        Programar una tarea para que se ejecute cada lunes a las 6:30 AM:    crontab -e30 6 * * 1 /ruta/del/comando      En los ejemplos anteriores, la sintaxis de los cinco asteriscos en las entradas de crontab representa minuto (0-59), hora (0-23), día del mes (1-31), mes (1-12) y día de la semana (0-7, donde tanto 0 como 7 representan el domingo), respectivamente.5. ConclusiónEn resumen, los comandos sleep, watch, at y crontab son herramientas esenciales en sistemas operativos basados en Linux, como Debian, para la gestión del tiempo y la automatización de tareas.Estas herramientas proporcionan a los usuarios y administradores de sistemas unagran flexibilidad para programar y automatizar tareas, optimizando así el flujo detrabajo y la eficiencia del sistema.6. BibliografíaIONOSMontblanczoneHostgator"
  },
  
  {
    "title": "Creación de máquina virtual en VirtualBox con arranque dual",
    "url": "/posts/dual-boot/",
    "categories": "Sistemas, Virtualización",
    "tags": "Virtualización",
    "date": "2024-09-02 14:09:00 +0200",
    





    
    "snippet": "IntroducciónEn esta práctica, aprenderemos a crear una máquina virtual en VirtualBox que permita ejecutar dos sistemas operativos en modo de arranque dual: Windows y Debian Bookworm. El arranque du...",
    "content": "IntroducciónEn esta práctica, aprenderemos a crear una máquina virtual en VirtualBox que permita ejecutar dos sistemas operativos en modo de arranque dual: Windows y Debian Bookworm. El arranque dual es una técnica que nos permite elegir entre dos sistemas operativos al iniciar la máquina, lo que resulta muy útil para tener un entorno flexible y adaptable a diferentes necesidades de trabajo o pruebas. Exploraremos los pasos necesarios para instalar y configurar ambos sistemas operativos en la misma máquina virtual, asegurándonos de que puedan coexistir de manera eficiente y sin problemas de compatibilidad. ¡Comencemos!Requisitos Mínimos y RecomendadosLos requisitos específicos pueden variar según la versión de Windows yDebian que elijas, pero aquí tienes algunos requisitos generales:Para Windows (por ejemplo, Windows 10):  Mínimos: Procesador de 1 GHz, 1 GB de RAM (32 bits) o 2 GB deRAM (64 bits), 16 GB de espacio en disco duro, tarjeta gráficacompatible con DirectX 9.  Recomendados: Procesador de 2 GHz o superior, 4 GB de RAM omás, 64 GB de espacio en disco duro o más, tarjeta gráficacompatible con DirectX 11.Para Debian Bookworm (versión actualizada):  Mínimos: Procesador de 1 GHz, 1 GB de RAM, 10 GB de espacio endisco duro.  Recomendados: Procesador de 2 GHz o superior, 2 GB de RAM omás, 20 GB de espacio en disco duro o más.Requisitos Previos  Tener instalado Oracle VirtualBox en el equipo anfitrión.  Descargar las imágenes ISO de Windows y Debian Bookworm.Instalación1. Creación de la Máquina Virtual:  Abre VirtualBox.  Haga clic en “Nueva” para crear una nueva máquina virtual.  Ingresa un nombre para la máquina virtual (ejemplo: “DualBoot”).  Introduce la ISO de Windows descargada anteriormente y selecciona la versión adecuada (por ejemplo, “Windows 10 Pro de 64 bits”).  Configure la cantidad de memoria RAM asignada según los requisitos del sistema operativo Windows (en mi caso le asignaré 4096MB) y la cantidad de CPUs (en mi caso le pondré 4).  Crea un disco duro virtual y asigna un tamaño suficiente para ambos sistemas operativos (por ejemplo, 50 GB).Una vez creada la máquina, nos dirigimos a “Configuración” y en la pestaña “Sistema” deseleccionamos el disquete y dejamos seleccionadas la unidad óptica y el disco duro.Después de esto ya podemos iniciar la máquina virtual y empezar elproceso de instalación de Windows 10.2. Instalación de Windows  Seguimos las instrucciones de instalación de Windows  En la pestaña en la que nos pregunta que tipo de instalaciónqueremos elegimos “Personalizada: instalar solo Windows(avanzado)”, esto lo haremos para indicar en que parte del discoinstalaremos el sistema operativo.  Configure las opciones de idioma, zona horaria y cuenta de usuario.Después de esto ya lo deberíamos tener instalado.3. Liberación de discoTendremos que particionar el disco desde Windows para darle espacio mástarde en la instalación de Debian. Para ello seguiremos los estos pasos:  Nos dirigimos al apartado “Desfragmentar y optimizar unidades”Ahí analizaremos y optimizaremos el disco (C:) para seguidamentepoder desfragmentar el disco. Esto nos servirá a la hora de reducir elvolumen del disco principal.  Luego nos iremos al apartado “Crear y formatear particiones deldisco duro”Aquí haremos botón derecho sobre el disco duro (C:) y le daremos a“reducir volumen”, en este caso le asignaremos 20GB a la segundapartición en la cual instalaremos Debian 12.Una vez liberado y particionado el disco para darle espacio a Debian,apagamos la máquina virtual.4. Instalación de Debian Bookworm  Nos dirigimos a “Configuración” y en la pestaña de“Almacenamiento” sustituimos la imagen ISO de Windows por la deDebian 12 ya descargada anteriormente.  Seguimos las instrucciones de instalación de Debian como ya hemosvisto anteriormente, en la que configuraremos el nombre del host,crearemos una cuenta de usuario, idioma, etc.  Una vez llegamos a la configuración del particionado de disco,seleccionamos el método “Manual”, y seleccionamos el espacio libreque hemos dejado anteriormente, aquí nos dejará elegir entre crearuna partición nueva manualmente o particionar el espacio libre demanera automática, esta segunda opción es la que nos interesa. Nosdebe de quedar algo como esto:  En el apartado de selección de entorno gráfico podremos instalar elentorno que deseemos, en mi caso no instalaré ninguno. De todasformas, luego en la línea de comandos puedo instalar cualquierentorno con el comando “tasksel”.5.Configuración del Gestor de Arranque GRUB  Durante la instalación de Debian, se instalará GRUB, el gestor dearranque.  Asegúrese de que GRUB detecte automáticamente ambos sistemasoperativos (Windows y Debian) durante la instalación. Nos deberíasaltar un mensaje como este:  Esto permitirá que al iniciar la máquina virtual, puedas elegir entrelos dos sistemas operativos desde el menú de GRUB.6. Finalización de la Instalación  Reinicia la máquina virtual.  Deberías ver el menú de GRUB que te permite seleccionar entreWindows y Debian al iniciar.Y con esto ya habríamos terminado la creación de máquina virtual enVirtualBox con arranque dual."
  },
  
  {
    "title": "Compartición de carpetas",
    "url": "/posts/comparticion-carpetas/",
    "categories": "Redes, Compartición de archivos",
    "tags": "Compartición de archivos",
    "date": "2024-09-01 15:30:00 +0200",
    





    
    "snippet": "1. IntroducciónEn esta práctica se abordará la configuración y gestión de la compartición de carpetas entre diferentes sistemas operativos en una red local. La compartición de archivos es una tarea...",
    "content": "1. IntroducciónEn esta práctica se abordará la configuración y gestión de la compartición de carpetas entre diferentes sistemas operativos en una red local. La compartición de archivos es una tarea esencial en redes empresariales y domésticas, ya que permite a los usuarios acceder y gestionar recursos compartidos de manera eficiente, independientemente del sistema operativo que utilicen.El objetivo de esta práctica es demostrar cómo configurar la compartición de carpetas en diversas combinaciones de sistemas: de Windows a Windows, de Windows a Debian, de Debian a Windows, etc. Se utilizarán herramientas nativas y protocolos como Samba para garantizar la interoperabilidad entre estos sistemas.Al finalizar, se habrá aprendido a configurar adecuadamente permisos de acceso, seguridad y las mejores prácticas para la compartición de recursos en un entorno de red mixto.2. Windows a WindowsPara compartir carpetas entre dos máquinas físicas con Windows10, podemos utilizar la funcionalidad de red compartida de Windows.A continuación, te proporciono los pasos generales para hacerlo:2.1. Conexión de redAsegúrate de que ambas máquinas estén conectadas a lamisma red, ya sea mediante Wi-Fi o Ethernet. Esto es esencialpara que las computadoras se vean entre sí. En mi caso,realizaré la compartición de carpetas entre dos máquinasfísicas conectadas a una misma red Wi-Fi. Para saber nuestraIP nos dirigimos al “Cmd” y utilizamos el comando “ipconfig”.Aquí veremos diferentes IPv4, pero a mi me interesa eladaptador de LAN inalámbrica Wi-Fi:2.2. Habilitar el descubrimiento de redEn ambas máquinas, debes asegurarte de que la función de“Descubrimiento de red” esté habilitada. Para hacerlo: Ve al “Panel de control” &gt; “Redes y recursos compartidos”.En la parte izquierda, haz clic en “Cambiar la configuración deuso compartido avanzado”.Asegúrate de que la opción “Activar el uso compartido dearchivos e impresoras” esté habilitada y que la opción “Activarel descubrimiento de red” también esté habilitada.2.3. Compartir carpetasEn la máquina desde la cual deseas compartir carpetas, sigueestos pasos:  Navega a la carpeta que deseas compartir  Haz clic derecho en la carpeta y selecciona “Propiedades”.  Ve a la pestaña “Uso compartido” y haz clic en “Compartir”.  Elige a quién deseas compartir la carpeta. Puedes seleccionar “Todos” para que sea accesible para todos en la red o agregar usuarios específicos.  Define los permisos de acceso (lectura, escritura, etc.) según tus necesidades.  Haz clic en “Compartir” y luego en “Listo”.2.4. Acceso a la carpeta compartidaEn la otra máquina, para acceder a la carpeta compartida:  Abre el Explorador de Windows.  En la barra de direcciones, escribe \\”IP” (reemplaza “IP” por la ruta de la máquina desde la cual estás compartiendo la carpeta).  Deberías ver la carpeta compartida. Haz doble clic en ella y podrás acceder a su contenido.Es importante que ambas máquinas tengan configurado un grupo detrabajo común. Puedes verificar esto y cambiarlo en la configuración de redde cada máquina si es necesario. Además, asegúrate de que las cuentas deusuario en ambas máquinas tengan permisos para acceder a las carpetascompartidas si estás utilizando autenticación basada en cuentas de usuario.Ten en cuenta que estos son pasos generales y pueden variar según laconfiguración específica de tu red y tu sistema. Además, para acceder a lascarpetas compartidas en una red local, ambas máquinas deben estarencendidas y conectadas a la red al mismo tiempo.3. Windows a DebianPara compartir carpetas entre una máquina física con Windows 10 y unamáquina virtual Debian 11 se pueden utilizar diferentes métodos, pero en mi caso utilizaré Samba, en los que seguiré estos pasos:3.1. Configuración de la Máquina Virtual Debian 11Asegúrese de que la máquina virtual Debian 11 esté funcionandocorrectamente y tenga acceso a la red. Para ello tendremos quecambiar el adaptador de red en la configuración de la máquinavirtual, en este caso un adaptador puente.Después de esto, tendremos que comprobar que nuestras máquinashacen ping entre sí:Ping de Windows a DebianPing de Debian a WindowsInstale el paquete de Samba en Debian 11 si aún no está instalado.Puedes hacerlo ejecutando el siguiente comando en la terminal:Creamos la carpeta donde vamos a compartir los archivos.mkdir /home/pavlo/compartidachmod 777 /home/pavlo/compartidaEditamos el archivo de configuración de samba:nano /etc/samba/smb.confAl final del archivo insertamos el siguiente texto correspondiente a laconfiguración de nuestra carpeta compartida:[compartida]path = /home/pavlo/compartidacomment = Compartidaguest ok = yespublic = yeswritable = yesGuardamos los cambios y después reiniciamos el servicio con elcomando:service smbd restartDespués de esto creamos un documento de prueba y ya tendremoscreada una carpeta lista para compartir:En nuestro equipo con Windows nos dirigimos al apartado de red yen el navegador de archivos escribimos la IP que tengamos asignadaen Debian:Si se le solicita un nombre de usuario y una contraseña, ingrese lascredenciales de inicio de sesión de su máquina virtual Debian 11.Con esto realizado, ya podremos empezar a compartir archivos entre losdos sistemas operativos.Mencionar, que en este ejemplo hemos utilizado unos permisos para lacarpeta muy permisivos en el que cualquiera puede leer y escribir en eldirectorio.4. Debian a WindowsPara compartir carpetas de Debian a Windows tenemos que seguirexactamente los mismos pasos ya explicados en el apartado anterior.5. Debian a DebianPara compartir carpetas entre Debian y Debian hay que seguirprácticamente los mismos pasos ya explicados anteriormente. En mi casolo haré con dos máquinas virtuales entre sí. Para ello tendremos que seguir una serie de pasos:      En primer lugar y muy importante, comprobar que haya conectividad(ping) entre nuestras máquinas, en donde tendremos que configurarlas IPs para que ambas tengan coherencia. Después de ellorealizaremos la prueba y comprobamos si funciona:        Seguidamente tendremos que instalar Samba en ambas máquinas ycreamos la carpeta donde vamos a compartir los archivos.  mkdir /home/pavlo/compartidadebianchmod 777 /home/pavlo/compartidadebian  Editamos el archivo de configuración de samba:    nano /etc/samba/smb.conf      Al final del archivo insertamos el siguiente texto correspondiente a laconfiguración de nuestra carpeta compartida:[compartidadebian]path = /home/pavlo/compartidadebiancomment = Comparticion entre Debian y Debianguest ok = yespublic = yeswritable = yesGuardamos los cambios y después reiniciamos el servicio con elcomando:service smbd restart      Después de esto creamos un documento de prueba y ya tendremoscreada una carpeta lista para compartir:        Una vez configurado todo se seguirán los mismos sencillos pasos queen Windows estando en la misma red y utilizando el comandosmb://111.111.1.11  Y con esto ya habríamos hecho la compartición de carpetas entre Debian y Debian a través de Samba.6. Windows a AndroidUtilizando una aplicación llamada “fx file explorer” nos resultará muysencillo compartir carpetas entre Windows y Android.Como en todos los apartados anteriores tendremos que estar conectados ala misma red para que ambos dispositivos puedan realizar conectividadentre sí. En mi caso estarán conectados tanto mi portátil como mi teléfono a la red Wi-Fi de mi casa.Una vez instalada la aplicación y comprobado que ambos dispositivos están en la misma red, creamos una carpeta compartida en Windows dando los permisos que queramos como ya he explicado anteriormente. Despuésaccedemos al apartado de “Network” y agregamos un nuevo dispositivo enel que tendremos que poner la IP de nuestro dispositivo Windows.Una vez realizado todo esto lo único que queda es abrir la carpetacompartida con permisos y crear un archivo desde Android comprobandoque todo vaya bien.7. Debian y AndroidQuizás la forma más fácil de compartir archivos entre Android y Linux de forma inalámbrica sea descargando una aplicación FTP en un dispositivo Android. Ya que nos permite alojar rápidamente un servidor FTP improvisado en nuestro dispositivo Android, que luego puede aceptarconexiones remotas de forma inalámbrica.Antes de que podamos hablar sobre la configuración del servidor, deberáinstalar la aplicación WiFi FTP Server en su dispositivo Android. Parahacer esto, abra la aplicación Google Play Store en Android, busque“Servidor FTP WiFi” e instálalo.Después de estado tendremos que instalar Filezilla en Debian con elsiguiente comando:apt install FilezillaDentro de la aplicación de Android crearemos un servidor con la ubicación de donde queremos crear los archivos.Una vez creamos el servidor dentro de Filezilla ponemos los datos que nos da la aplicación para crear una conexión directa entre ambos dispositivos.Seguidamente le damos a “Subir” en el archivo o carpeta que queramoscompartir y así respectivamente con cualquier cosa que queramoscompartir entre ambos dispositivos."
  }
  
]

